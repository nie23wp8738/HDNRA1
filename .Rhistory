registerDoParallel(cl)
nrep <- 10
size_matrix <- matrix(NA, nrow = nrep, ncol = 11)
para_matrix <- matrix(NA, nrow = nrep, ncol = 10)
startTime <- Sys.time( )
resluts <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
size <- c(size_ts_zgzc2020, size_ts_zzz2020, size_tsbf_zzgz2021, size_tsbf_zwz2023, size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022, size_ts_bs1996, size_ts_sd2008, size_tsbf_cq2010, size_tsbf_skk2013)
para <- c(ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters)
return(list(size = size, para = para))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
size_matrix <- do.call(rbind, lapply(results, function(x) x$size))
size_matrix <- do.call('rbind', lapply(results, function(x) x$size))
size_matrix <- do.call('rbind', lapply(resluts, function(x) x$size))
parameters_matrix <- do.call('rbind', lapply(resluts, function(x) x$para))
size_matrix <- do.call(rbind, lapply(resluts, function(x) x$size))
print(str(results[[1]]))
print(str(resluts[[1]]))
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 100
size_matrix <- matrix(nrow = nrep, ncol = 11)
para_matrix <- matrix(nrow = nrep, ncol = 10)
tartTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
size <- c(size_ts_zgzc2020, size_ts_zzz2020, size_tsbf_zzgz2021, size_tsbf_zwz2023, size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022, size_ts_bs1996, size_ts_sd2008, size_tsbf_cq2010, size_tsbf_skk2013)
para <- c(ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters)
return(list(size = size, para = para))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
size_matrix <- do.call('rbind', lapply(results, function(x) x$size))
para_matrix <- do.call('rbind', lapply(results, function(x) x$para))
size_matrix <- do.call('rbind', lapply(results, function(x) $size))
print(str(results[[]]))
print(str(results[]))
View(results)
results <- as.matrix(results)
View(results)
results <- as.matrix(results)
print(results)
gc()
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 100
size_matrix <- matrix(nrow = nrep, ncol = 11)
para_matrix <- matrix(nrow = nrep, ncol = 10)
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020, size_tsbf_zzgz2021, size_tsbf_zwz2023, size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022, size_ts_bs1996, size_ts_sd2008, size_tsbf_cq2010, size_tsbf_skk2013))
return(c(ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
results <- as.matrix(results)
View(results)
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 100
size_matrix <- matrix(nrow = nrep, ncol = 11)
para_matrix <- matrix(nrow = nrep, ncol = 10)
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020,
size_tsbf_zzgz2021, size_tsbf_zwz2023,
size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022,
size_ts_bs1996, size_ts_sd2008,
size_tsbf_cq2010, size_tsbf_skk2013,
ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020,
size_tsbf_zzgz2021, size_tsbf_zwz2023,
size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022,
size_ts_bs1996, size_ts_sd2008,
size_tsbf_cq2010, size_tsbf_skk2013,
ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
results <- as.matrix(results)
View(results)
size_matrix <- as.matrix(results[1:11],)
View(size_matrix)
size_matrix <- as.matrix(results[c(1:11)],)
View(size_matrix)
size_matrix <- as.matrix(results[c(1:11),])
View(size_matrix)
size_matrix <- as.matrix(results[r(1:11),])
size_matrix <- as.matrix(results[row(1:11),])
size_matrix <- as.matrix(results[,1:11])
View(size_matrix)
para_matrix <- as.matrix(results[,12:21])
View(para_matrix)
size <- as.matrix(results[,1:11])
para <- as.matrix(results[,12:21])
print(colSums(size)/nrep)
print(colSums(para)/nrep)
apply(para,2,mean)
apply(size,2,mean)
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 100
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020,
size_tsbf_zzgz2021, size_tsbf_zwz2023,
size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022,
size_ts_bs1996, size_ts_sd2008,
size_tsbf_cq2010, size_tsbf_skk2013,
ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 100
nrep <- 10
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020,
size_tsbf_zzgz2021, size_tsbf_zwz2023,
size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022,
size_ts_bs1996, size_ts_sd2008,
size_tsbf_cq2010, size_tsbf_skk2013,
ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
results <- as.matrix(results)
setwd("~/Desktop/HDNRA")
devtools::check()
results <- rhub::check_for_cran()
results$cran_summary()
View(results)
results$cran_summary()
results <- rhub::check_for_cran()
devtools::build()
results$cran_summary()
results$cran_summary()
cran_summary()
devtools::build_vignettes()
setwd("~/Desktop/HDNRA")
devtools::build_vignettes()
devtools::check()
results <- rhub::check_for_cran()
results$cran_summary()
install.packages("highmean")
devtools::check()
results <- rhub::check_for_cran()
results$cran_summary()
library(HDNRA)
remove.packages("HDNRA")
library(HDNRA)
devtools::check()
results <- rhub::check_for_cran()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
results$cran_summary()
remotes::install_github("nie23wp8738/HDNRA")
remotes::install_github("nie23wp8738/HDNRA")
library(HDNRA)
remove.packages("HDNRA")
remotes::install_github("nie23wp8738/HDNRA")
library(HDNRA)
setwd("~/Desktop/HDNRA")
results$cran_summary()
results$cran_summary()
install.packages("sysreqs")
usethis::use_cran_comments()
docker exec -it 6a0285dcd25b /bin/sh
rhub::check_for_cran(env_vars = c('_R_CHECK_FORCE_SUGGESTS_' = "false"))
R CMD check --as-cran brocolors_0.1.tar.gz
rhub::list_my_checks()
rhub::list_my_checks(email = "nie23.wp8738@e.ntu.edu.sg")
library(HDNRA)
setwd("~/Desktop/HDNRA")
setwd("~/Desktop")
