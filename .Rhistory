nrep <- 100
nrep <- 10
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
ts_zzz2020 <- ts_zzz2020(t(group2_1),t(group2_2))
tsbf_zzgz2021 <- tsbf_zzgz2021(t(group2_1),t(group2_2))
tsbf_zwz2023 <- tsbf_zwz2023(t(group2_1),t(group2_2))
tsbf_zzz2023 <- tsbf_zzz2023(t(group2_1),t(group2_2),cutoff = 1.2)
# 3-c
ts_zz2022 <- ts_zz2022(t(group2_1),t(group2_2))
tsbf_zz2022 <- tsbf_zz2022(t(group2_1),t(group2_2))
# The others
ts_bs1996 <- ts_bs1996(t(group2_1),t(group2_2))
ts_sd2008 <- ts_sd2008(t(group2_1),t(group2_2))
tsbf_cq2010 <- tsbf_cq2010(t(group2_1),t(group2_2))
tsbf_skk2013 <- tsbf_skk2013(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_ts_zzz2020 <- as.integer(ts_zzz2020$p.value<alpha)
size_tsbf_zzgz2021 <- as.integer(tsbf_zzgz2021$p.value<alpha)
size_tsbf_zwz2023 <- as.integer(tsbf_zwz2023$p.value<alpha)
size_tsbf_zzz2023 <- as.integer(tsbf_zzz2023$p.value<alpha)
# 3-c
size_ts_zz2022 <- as.integer(ts_zz2022$p.value<alpha)
size_tsbf_zz2022 <- as.integer(tsbf_zz2022$p.value<alpha)
# The others
size_ts_bs1996 <- as.integer(ts_bs1996$p.value<alpha)
size_ts_sd2008 <- as.integer(ts_sd2008$p.value<alpha)
size_tsbf_cq2010 <- as.integer(tsbf_cq2010$p.value<alpha)
size_tsbf_skk2013 <- as.integer(tsbf_skk2013$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020,
size_tsbf_zzgz2021, size_tsbf_zwz2023,
size_tsbf_zzz2023,
size_ts_zz2022, size_tsbf_zz2022,
size_ts_bs1996, size_ts_sd2008,
size_tsbf_cq2010, size_tsbf_skk2013,
ts_zgzc2020$parameters[2],
ts_zzz2020$parameters,
tsbf_zzgz2021$parameters[1],
tsbf_zwz2023$parameters[1],
tsbf_zzz2023$parameters[1],
tsbf_zzz2023$parameters[2],
ts_zz2022$parameters[3],
tsbf_zz2022$parameters[1],
ts_sd2008$parameters,
tsbf_skk2013$parameters))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
results <- as.matrix(results)
setwd("~/Desktop/NRAHDLTP")
setwd("~/Desktop/NRAHDLTP")
setwd("~/Desktop")
usethis::create_package(newnorm)
usethis::create_package("newnorm")
setwd("~/Desktop")
usethis::create_package("~/Desktop/newnorm")
setwd("~/Desktop/NRAHDLTP/R")
setwd("~/Desktop/NRAHDLTP")
library(NRAHDLTP)
remove.packages("NRAHDLTP")
library(NRAHDLTP)
data("COVID19")
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
new_zgzc2020(t(group1),t(group2))
ts_zgzc2020(t(group1),t(group2))
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 10
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
new_zgzc2020 <- new_zgzc2020(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_new_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
return(c(size_ts_zgzc2020, size_ts_zzz2020,
size_new_zgzc2020))
}
nrep <- 10
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
new_zgzc2020 <- new_zgzc2020(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_new_zgzc2020 <- as.integer(new_zgzc2020$p.value<alpha)
return(c(size_ts_zgzc2020,
size_new_zgzc2020))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
results <- as.matrix(results)
print(colSums(results)/nrep)
nrep <- 100
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
new_zgzc2020 <- new_zgzc2020(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_new_zgzc2020 <- as.integer(new_zgzc2020$p.value<alpha)
return(c(size_ts_zgzc2020,
size_new_zgzc2020))
}
library(doParallel)
library(NRAHDLTP)
library(foreach)
data("COVID19")
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
alpha <- 0.05
no_cores <- detectCores() - 1
cl <- makeCluster(no_cores)
registerDoParallel(cl)
nrep <- 100
startTime <- Sys.time( )
results <- foreach(N=1:nrep,.combine= 'rbind',.packages = c("NRAHDLTP")) %dopar% {
train <- sample(1:62,31,replace = FALSE)
group2_1 <- group2[train,]
group2_2 <- group2[-train,]
# 2-c
ts_zgzc2020 <- ts_zgzc2020(t(group2_1),t(group2_2))
new_zgzc2020 <- new_zgzc2020(t(group2_1),t(group2_2))
# 2-c
size_ts_zgzc2020 <- as.integer(ts_zgzc2020$p.value<alpha)
size_new_zgzc2020 <- as.integer(new_zgzc2020$p.value<alpha)
return(c(size_ts_zgzc2020,
size_new_zgzc2020))
}
endTime <- Sys.time( )
print(difftime(endTime,startTime, units ="secs"))
stopCluster(cl)
results <- as.matrix(results)
print(colSums(results)/nrep)
citation("doParallel")
citation("foreach")
library(NRAHDLTP)
remove.packages("NRAHDLTP")
library(NRAHDLTP)
library("NRAHDLTP")
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
# normal-reference approach based test for GLHT problem
glht_zgz2017(Y,G,n,p)
library(NRAHDLTP)
library("NRAHDLTP")
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
# normal-reference approach based test for GLHT problem
glht_zgz2017(Y,G,n,p)
remove.packages("NRAHDLTP")
library(NRAHDLTP)
library("NRAHDLTP")
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
# normal-reference approach based test for GLHT problem
glht_zgz2017(Y,G,n,p)
remove.packages("NRAHDLTP")
library(NRAHDLTP)
library("NRAHDLTP")
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
# normal-reference approach based test for GLHT problem
glht_zgz2017(Y,G,n,p)
data("COVID19")
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
ts_sd2008(t(group1),t(group2))
library("NRAHDLTP")
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
devtools::install_github("helske/changer")
library(changer)
?changer
remove.packages("timechange")
install.packages("timechange")
library(NRAHDLTP)
library("NRAHDLTP")
## Section 4.1
data("COVID19")
dim(COVID19)
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
dim(group1)
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
dim(group2)
data("COVID19")
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
ts_zz2022(t(group1),t(group2))
library("NRAHDLTP")
# input data
data("COVID19")
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
q <- k-1
X <- matrix(c(rep(1,n[1]),rep(0,sum(n)),rep(1,n[2]),rep(0,sum(n)),rep(1,n[3]),rep(0,sum(n)),rep(1,n[4])),ncol=k,nrow=sum(n))
C <- cbind(diag(q),-rep(1,q))
glht_zz2022(Y,G,n,p)
# normal-reference approach based test for GLHT problem
glht_zgz2017(Y,G,n,p)
glht_zzz2022(corneal,X,C)
glhtbf_zzg2022(Y,G,n,p)
glht_zz2022(Y,G,n,p)
glhtbf_zz2022(Y,G,n,p)
setwd("~/Desktop/NRAHDLTP 2")
library(changer)
path <- choose.dir()
setwd("~/Desktop/NRAHDLTP 2")
library(changer)
path_to_package <- "~/Desktop/NRAHDLTP 2"
new_package_name <- "HDnra"
changer(path = path_to_package,
new_name = new_package_name,
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
rlang::last_trace()
rlang::last_trace(drop = FALSE)
changer(path = path_to_package,
new_name = new_package_name,
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
path_to_package <- "~/Desktop/NRAHDLTP 2"
new_package_name <- "HDnra"
changer(path = path_to_package,
+         new_name = new_package_name,
path_to_package <- "~/Desktop/NRAHDLTP 2"
new_package_name <- "HDnra"
changer(path = path_to_package,
new_name = new_package_name,
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
path_to_package <- "~/Desktop/NRAHDLTP 2"
new_package_name <- "HDnra"
changer(path = path_to_package,
new_name = new_package_name,
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
path_to_package <- "~/Desktop/NRAHDLTP 2"
new_package_name <- "HDnra"
changer(path = path_to_package,
new_name = new_package_name,
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
devtools::install_github("helske/changer")
path_to_package <- "~/Desktop/NRAHDLTP 2"
changer(file.path(tempdir(), "NRAHDLTP"),
new_name = "HDnra",
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
changer(path = "~/Desktop/NRAHDLTP 2",
new_name = "HDnra",
check_validity = TRUE,
ask = TRUE,
change_git = FALSE,
run_roxygen = TRUE,
replace_all = TRUE)
setwd("~/Desktop/HDnra")
load("~/Desktop/HDnra/.RData")
pkgload::dev_help('corneal')
pkgload::dev_help('ts_zz2022')
devtools::load_all()
?corneal
load("~/Desktop/HDnra/data/corneal.rda")
load("~/Desktop/HDnra/data/COVID19.rda")
devtools::check()
pkgload::dev_help('ts_zzz2020')
devtools::check()
setwd("~/Desktop/HDNRA")
devtools::document()
devtools::document()
devtools::load_all()
devtools::check()
devtools::check()
library(HDNRA)
remove.packages("HDNRA")
library(HDNRA)
library(HDNRA)
gc()
gc()
library("HDNRA")
# The COVID-19 data
data("COVID19")
dim(COVID19)
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
dim(group1)
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
dim(group2)
data("corneal")
dim(corneal)
group1 <- as.matrix(corneal[1:43, ])
dim(group1)
group2 <- as.matrix(corneal[44:57, ])
dim(group2)
group3 <- as.matrix(corneal[58:78, ])
dim(group3)
group4 <- as.matrix(corneal[79:150, ])
dim(group4)
data("COVID19")
group1 <- as.matrix(COVID19[c(2:19, 82:87), ])
group2 <- as.matrix(COVID19[-c(1:19, 82:87), ])
# normal-reference approach based test for two-sample problem
ts_zgzc2020(t(group1),t(group2))
ts_zz2022(t(group1),t(group2))
ts_zzz2020(t(group1),t(group2))
tsbf_zwz2023(t(group1),t(group2))
tsbf_zz2022(t(group1),t(group2))
tsbf_zzgz2021(t(group1),t(group2))
tsbf_zzz2023(t(group1),t(group2),cutoff = 1.2)
# the others' tests for two-sample problem
ts_bs1996(t(group1),t(group2))
ts_sd2008(t(group1),t(group2))
tsbf_cq2010(t(group1),t(group2))
tsbf_skk2013(t(group1),t(group2))
data("corneal")
p <- dim(corneal)[2]
k <- 4
Y <- list()
group1 <- as.matrix(corneal[1:43, ])
group2 <- as.matrix(corneal[44:57, ])
group3 <- as.matrix(corneal[58:78, ])
group4 <- as.matrix(corneal[79:150, ])
Y[[1]] <- t(group1)
Y[[2]] <- t(group2)
Y[[3]] <- t(group3)
Y[[4]] <- t(group4)
n <- c(ncol(Y[[1]]),ncol(Y[[2]]),ncol(Y[[3]]),ncol(Y[[4]]))
G <- cbind(diag(k-1),rep(-1,k-1))
q <- k-1
X <- matrix(c(rep(1,n[1]),rep(0,sum(n)),rep(1,n[2]),rep(0,sum(n)),rep(1,n[3]),rep(0,sum(n)),rep(1,n[4])),ncol=k,nrow=sum(n))
C <- cbind(diag(q),-rep(1,q))
# normal-reference approach based test for GLHT problem
glht_zgz2017(Y,G,n,p)
glht_zzz2022(corneal,X,C)
glhtbf_zzg2022(Y,G,n,p)
glht_zz2022(Y,G,n,p)
glhtbf_zz2022(Y,G,n,p)
# Others' tests for GLHT problem
glht_fhw2004(corneal,X,C)
glht_sf2006(corneal,X,C)
glht_ys2012(corneal,X,C)
ks_s2007(Y,n,p)
glhtbf_zgz2017(Y,G,n,p)
remove.packages("HDNRA")
styler::style_pkg()
lintr::lint_package()
usethis::use_testthat()
usethis::use_test()
usethis::use_pkgdown()
usethis::use_pkgdown()
pkgdown::build_site()
?build_news
pkgdown::build_site()
usethis::use_tidy_github_actions()
usethis::use_news_md()
usethis::use_code_of_conduct()
usethis::use_code_of_conduct()
usethis::use_code_of_conduct(email = "nie23.wp8738@e.ntu.edu.sg")
setwd("~/Desktop/HDNRA")
usethis::use_code_of_conduct()
setwd("~/Desktop/HDNRA")
devtools::load_all()
devtools::check()
pkgdown::build_site()
devtools::build_rmd()
usethis::use_readme_rmd()
devtools::build_rmd()
devtools::build_rmd(files = "README.Rmd")
devtools::install()
devtools::install()
install.packages(c("bayestestR", "BH", "boot", "callr", "cluster", "coda", "cowplot", "CVXR", "data.table", "datawizard", "DBI", "DescTools", "directlabels", "distributional", "exact2x2", "foreign", "ggrepel", "gmp", "igraph", "insight", "klaR", "lattice", "lavaan", "lpSolve", "MASS", "Matrix", "matrixStats", "memisc", "mgcv", "multicool", "nlme", "npde", "parameters", "performance", "psych", "R.oo", "rainbow", "renv", "reprex", "rmatio", "Rmpfr", "robustbase", "rpart", "rsconnect", "rvest", "s2", "sandwich", "scam", "sf", "sp", "spatialreg", "spdep", "StanHeaders", "survival", "terra", "tidyr", "usethis", "uuid", "V8", "viridis", "writexl", "xfun"))
devtools::check()
setwd("~/Desktop/HDNRA")
devtools::document()
devtools::document()
library(HDNRA)
pkgdown::build_site()
library(devtools)
install.packages("HDNRA")
install.packages("HDNRA")
devtools::check()
